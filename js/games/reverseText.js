import modalStyles from '../styles/modalStyles.js';
import logger from '../utils/logger.js';
import gameElementStyles from '../styles/gameElementStyles.js';

/**
 * –ò–≥—Ä–∞ "–ü–µ—Ä–µ–≤–µ—Ä–Ω–∏ —Ç–µ–∫—Å—Ç"
 * 
 * –ü—Ä–∞–≤–∏–ª–∞:
 * - –ò–≥—Ä–æ–∫—É –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è —Å–ª–æ–≤–æ –∏–ª–∏ —Ñ—Ä–∞–∑–∞
 * - –ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —ç—Ç–æ —Å–ª–æ–≤–æ/—Ñ—Ä–∞–∑—É –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
 * - –ó–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è 1 –æ—á–∫–æ
 * - –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
 * 
 * @returns {void}
 */
export function startReverseTextGame() {
    logger.info('Starting Reverse Text Game');
    
    let score = 0;
    let totalQuestions = 0;
    
    // –ú–∞—Å—Å–∏–≤—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –∏–≥—Ä—ã
    const phrases = [
        '–ö–æ—Ç', '–ú–æ—Ä–æ–∑', '–î—É–±', '–°–∫–∞–∑–∫–∞', '–ë–æ–≥–∞—Ç—ã—Ä—å', '–í–µ—Ç–µ—Ä', '–ö–∏—Ç', '–õ–æ–∂—å',
        '–î–æ—Ä–æ–≥–∞', '–õ–µ—Å', '–ö–æ–∑–ª–∏–∫', '–¢—Ä–æ–ø–∞', '–¶–∞—Ä—Å—Ç–≤–æ', '–ì–æ—Ä—ã', '–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ',
        '–í–æ–ª—à–µ–±—Å—Ç–≤–æ', '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ', '–°–æ–∫—Ä–æ–≤–∏—â–µ', '–ó–∞–º–æ–∫', '–†—ã—Ü–∞—Ä—å', '–î—Ä–∞–∫–æ–Ω',
        '–ü—Ä–∏–Ω—Ü–µ—Å—Å–∞', '–ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ', '–í–æ–ª—à–µ–±–Ω–∏–∫', '–ß–∞—Ä–æ–¥–µ–π', '–¢–∞–π–Ω–∞', '–ó–∞–≥–∞–¥–∫–∞',
        '–°–æ–∫—Ä–æ–≤–∏—â–µ', '–ö–ª–∞–¥–µ–∑—å', '–õ–∞–±–∏—Ä–∏–Ω—Ç', '–ó–≤–µ–∑–¥–æ–ø–∞–¥', '–†–∞–¥—É–≥–∞', '–ú–µ—Ç–µ–æ—Ä–∏—Ç',
        '–ö–æ–º–µ—Ç–∞', '–ì–∞–ª–∞–∫—Ç–∏–∫–∞', '–í—Å–µ–ª–µ–Ω–Ω–∞—è', '–ö–æ—Å–º–æ—Å', '–ü–ª–∞–Ω–µ—Ç–∞', '–°–æ–∑–≤–µ–∑–¥–∏–µ',
        '–ú–ª–µ—á–Ω—ã–π –ø—É—Ç—å', '–ö—Ä–∞—Å–Ω–∞—è —à–∞–ø–æ—á–∫–∞', '–ë–µ–ª–æ—Å–Ω–µ–∂–∫–∞', '–ó–æ–ª—É—à–∫–∞', '–†—É—Å–∞–ª–æ—á–∫–∞',
        '–ê–ª–∏—Å–∞', '–ü–∏—Ç–µ—Ä –ü—ç–Ω', '–í–∏–Ω–Ω–∏ –ü—É—Ö', '–ö–∞—Ä–ª—Å–æ–Ω', '–ë—É—Ä–∞—Ç–∏–Ω–æ', '–ß–∏–ø–æ–ª–ª–∏–Ω–æ'
    ];

    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = document.createElement('div');
    modal.style.cssText = modalStyles.modal;

    const gameContent = document.createElement('div');
    gameContent.style.cssText = modalStyles.modalContent;

    // --- –°–¢–ê–†–¢–û–í–´–ô –≠–ö–†–ê–ù ---
    const startScreen = document.createElement('div');
    startScreen.style.cssText = 'padding: 32px 0; text-align: center;';
    startScreen.innerHTML = `
      <h2 style="font-size: 2em; margin-bottom: 16px;">–ü–µ—Ä–µ–≤–µ—Ä–Ω–∏ —Ç–µ–∫—Å—Ç</h2>
      <p style="font-size: 1.1em; color: #202027; margin-bottom: 24px;">
        –¢–µ–±–µ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ —Å–ª–æ–≤–æ –∏–ª–∏ —Ñ—Ä–∞–∑–∞. –í–≤–µ–¥–∏ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –∏ –ø—Ä–æ–≤–µ—Ä—å —Å–µ–±—è!<br>
        –ó–∞ –∫–∞–∂–¥—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å 1 –æ—á–∫–æ. –£–¥–∞—á–∏!
      </p>
      <button id="startReverseTextBtn" style="margin-top: 24px; font-size: 1.2em; padding: 10px 32px; background: #33d17a; color: #fff; border: none; border-radius: 8px; cursor: pointer;">–ù–∞—á–∞—Ç—å –∏–≥—Ä—É</button>
    `;
    gameContent.appendChild(startScreen);
    modal.appendChild(gameContent);
    document.body.appendChild(modal);

    // --- –û—Å–Ω–æ–≤–Ω–æ–π –∏–≥—Ä–æ–≤–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (—Å–æ–∑–¥–∞—ë—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞) ---
    function startGame() {
        gameContent.innerHTML = '';
        const scoreDisplay = document.createElement('p');
        scoreDisplay.style.cssText = gameElementStyles.score;
        scoreDisplay.textContent = '–°—á—ë—Ç: 0/0';
        const questionDisplay = document.createElement('p');
        questionDisplay.style.cssText = gameElementStyles.question;
        questionDisplay.textContent = '';
        const input = document.createElement('input');
        input.type = 'text';
        input.placeholder = '–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç';
        input.style.cssText = modalStyles.input;
        const message = document.createElement('p');
        message.style.cssText = gameElementStyles.message;
        const button = document.createElement('button');
        button.textContent = '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å';
        button.style.cssText = modalStyles.button;
        button.addEventListener('mouseover', () => {
            button.style.cssText = modalStyles.button + (modalStyles.buttonHover || '');
        });
        button.addEventListener('mouseout', () => {
            button.style.cssText = modalStyles.button;
        });
        const closeButton = document.createElement('button');
        closeButton.textContent = '–ó–∞–∫—Ä—ã—Ç—å';
        closeButton.style.cssText = modalStyles.button;
        closeButton.addEventListener('mouseover', () => {
            closeButton.style.cssText = modalStyles.button + (modalStyles.buttonHover || '');
        });
        closeButton.addEventListener('mouseout', () => {
            closeButton.style.cssText = modalStyles.button;
        });
        closeButton.addEventListener('click', () => {
            logger.info('Closing Reverse Text Game');
            document.body.removeChild(modal);
        });
        // --- –õ–æ–≥–∏–∫–∞ –∏–≥—Ä—ã ---
        function generateQuestion() {
            logger.info('Generating new text to reverse');
            try {
                const randomPhrase = phrases[Math.floor(Math.random() * phrases.length)];
                questionDisplay.textContent = randomPhrase;
                const reversed = randomPhrase.split('').reverse().join('');
                logger.info(`Generated phrase: "${randomPhrase}", reversed: "${reversed}"`);
                return reversed;
            } catch (error) {
                logger.error('Error generating question', error);
                throw error;
            }
        }
        let currentAnswer;
        function checkAnswer() {
            logger.info('Checking user answer');
            const userAnswer = input.value.trim();
            totalQuestions++;
            const category = '–ü–µ—Ä–µ–≤–µ—Ä–Ω–∏ —Ç–µ–∫—Å—Ç';
            try {
                if (!userAnswer) {
                    message.innerHTML = `
                        <div style="color: #202027;">
                            –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç
                        </div>
                    `;
                    message.style.background = '#f5f5f5';
                    logger.warning('User entered empty input');
                    return;
                }
                if (userAnswer.toLowerCase() === currentAnswer.toLowerCase()) {
                    score++;
                    const encouragements = window.gameMessages.encouragements && window.gameMessages.encouragements[category];
                    const randomEncouragement = encouragements && encouragements.length
                        ? encouragements[Math.floor(Math.random() * encouragements.length)]
                        : window.gameMessages.compliments[Math.floor(Math.random() * window.gameMessages.compliments.length)];
                    const categoryQuotes = window.gameMessages.quotesByCategory && window.gameMessages.quotesByCategory[category];
                    const randomQuote = categoryQuotes && categoryQuotes.length
                        ? categoryQuotes[Math.floor(Math.random() * categoryQuotes.length)]
                        : window.gameMessages.quotes[Math.floor(Math.random() * window.gameMessages.quotes.length)];
                    const quoteText = randomQuote && typeof randomQuote === 'object' 
                        ? `<div style="margin-top: 15px; font-size: 16px; color: #666;">
                            ${randomQuote.text}${randomQuote.emoji ? ' ' + randomQuote.emoji : ''}
                            ${randomQuote.author ? '<br><span style="font-size: 0.9em; color: #888;">‚Äî ' + randomQuote.author + '</span>' : ''}
                           </div>`
                        : randomQuote;
                    message.innerHTML = `
                        <div style="margin-top: 15px; font-size: 18px; color: #33d17a;">
                            ${randomEncouragement.text ? randomEncouragement.text : randomEncouragement}
                            ${randomEncouragement.emoji ? ' ' + randomEncouragement.emoji : ''}
                        </div>
                        <div style="margin-top: 15px; font-size: 16px; color: #666;">
                            ${quoteText}
                        </div>`;
                    message.style.background = '#e8f5e9';
                    logger.info('Correct answer', { userAnswer, correctAnswer: currentAnswer });
                } else {
                    const randomMotivation = window.gameMessages.motivation[Math.floor(Math.random() * window.gameMessages.motivation.length)];
                    message.innerHTML = `
                        <div style="color: #ff0000; font-weight: bold; font-size: 20px; margin-bottom: 10px;">
                            –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! üò¢
                        </div>
                        <div style="margin-bottom: 10px; font-size: 18px; color: #202027;">
                            –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: <b>${currentAnswer}</b>
                        </div>
                        <div style="margin-top: 15px; font-size: 18px; color: #202027;">
                            ${randomMotivation.text ? randomMotivation.text : randomMotivation}
                            ${randomMotivation.emoji ? ' ' + randomMotivation.emoji : ''}
                        </div>`;
                    message.style.background = '#ffebee';
                    logger.info('Incorrect answer', { userAnswer, correctAnswer: currentAnswer });
                }
                scoreDisplay.textContent = `–°—á—ë—Ç: ${score}/${totalQuestions}`;
                input.value = '';
                currentAnswer = generateQuestion();
            } catch (error) {
                logger.error('Error checking answer', error);
                message.innerHTML = `
                    <div style="color: #ff4444;">
                        –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.
                    </div>
                `;
                message.style.background = '#ffebee';
            }
        }
        button.addEventListener('click', checkAnswer);
        input.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                checkAnswer();
            }
        });
        closeButton.addEventListener('click', () => {
            logger.info('Closing Reverse Text Game');
            document.body.removeChild(modal);
        });
        // --- –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–≥—Ä–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ ---
        gameContent.appendChild(scoreDisplay);
        gameContent.appendChild(questionDisplay);
        gameContent.appendChild(input);
        gameContent.appendChild(message);
        gameContent.appendChild(button);
        gameContent.appendChild(closeButton);
        currentAnswer = generateQuestion();
        input.focus();
    }
    // --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ä—Ç–∞ ---
    const startBtn = gameContent.querySelector('#startReverseTextBtn');
    if (startBtn) startBtn.onclick = startGame;
    logger.info('Reverse Text Game initialized successfully');
}

window.startReverseTextGame = startReverseTextGame;
