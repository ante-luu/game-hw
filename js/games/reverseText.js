import { modalStyles } from '../styles/modalStyles.js';
import logger from '../utils/logger.js';

/**
 * –ò–≥—Ä–∞ "–ü–µ—Ä–µ–≤–µ—Ä–Ω–∏ —Ç–µ–∫—Å—Ç"
 * 
 * –ü—Ä–∞–≤–∏–ª–∞:
 * - –ò–≥—Ä–æ–∫—É –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è —Å–ª–æ–≤–æ –∏–ª–∏ —Ñ—Ä–∞–∑–∞
 * - –ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —ç—Ç–æ —Å–ª–æ–≤–æ/—Ñ—Ä–∞–∑—É –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
 * - –ó–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è 1 –æ—á–∫–æ
 * - –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
 * 
 * @returns {void}
 */
export function startReverseTextGame() {
    logger.info('Starting Reverse Text Game');
    
    let score = 0;
    let totalQuestions = 0;
    
    // –ú–∞—Å—Å–∏–≤—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –∏–≥—Ä—ã
    const phrases = [
        '–ö–æ—Ç', '–ú–æ—Ä–æ–∑', '–î—É–±', '–°–∫–∞–∑–∫–∞', '–ë–æ–≥–∞—Ç—ã—Ä—å', '–í–µ—Ç–µ—Ä', '–ö–∏—Ç', '–õ–æ–∂—å',
        '–î–æ—Ä–æ–≥–∞', '–õ–µ—Å', '–ö–æ–∑–ª–∏–∫', '–¢—Ä–æ–ø–∞', '–¶–∞—Ä—Å—Ç–≤–æ', '–ì–æ—Ä—ã', '–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ',
        '–í–æ–ª—à–µ–±—Å—Ç–≤–æ', '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ', '–°–æ–∫—Ä–æ–≤–∏—â–µ', '–ó–∞–º–æ–∫', '–†—ã—Ü–∞—Ä—å', '–î—Ä–∞–∫–æ–Ω',
        '–ü—Ä–∏–Ω—Ü–µ—Å—Å–∞', '–ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ', '–í–æ–ª—à–µ–±–Ω–∏–∫', '–ß–∞—Ä–æ–¥–µ–π', '–¢–∞–π–Ω–∞', '–ó–∞–≥–∞–¥–∫–∞',
        '–°–æ–∫—Ä–æ–≤–∏—â–µ', '–ö–ª–∞–¥–µ–∑—å', '–õ–∞–±–∏—Ä–∏–Ω—Ç', '–ó–≤–µ–∑–¥–æ–ø–∞–¥', '–†–∞–¥—É–≥–∞', '–ú–µ—Ç–µ–æ—Ä–∏—Ç',
        '–ö–æ–º–µ—Ç–∞', '–ì–∞–ª–∞–∫—Ç–∏–∫–∞', '–í—Å–µ–ª–µ–Ω–Ω–∞—è', '–ö–æ—Å–º–æ—Å', '–ü–ª–∞–Ω–µ—Ç–∞', '–°–æ–∑–≤–µ–∑–¥–∏–µ',
        '–ú–ª–µ—á–Ω—ã–π –ø—É—Ç—å', '–ö—Ä–∞—Å–Ω–∞—è —à–∞–ø–æ—á–∫–∞', '–ë–µ–ª–æ—Å–Ω–µ–∂–∫–∞', '–ó–æ–ª—É—à–∫–∞', '–†—É—Å–∞–ª–æ—á–∫–∞',
        '–ê–ª–∏—Å–∞', '–ü–∏—Ç–µ—Ä –ü—ç–Ω', '–í–∏–Ω–Ω–∏ –ü—É—Ö', '–ö–∞—Ä–ª—Å–æ–Ω', '–ë—É—Ä–∞—Ç–∏–Ω–æ', '–ß–∏–ø–æ–ª–ª–∏–Ω–æ'
    ];

    const compliments = [
        '–û—Ç–ª–∏—á–Ω–æ! –¢—ã —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è –≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ! üòä',
        '–í–æ—Å—Ö–∏—Ç–∏—Ç–µ–ª—å–Ω–æ! –¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –º–∞—Å—Ç–µ—Ä —Å–ª–æ–≤! üåü',
        '–ü–æ—Ç—Ä—è—Å–∞—é—â–µ! –¢—ã –¥–µ–ª–∞–µ—à—å —ç—Ç–æ —Å –ª–µ–≥–∫–æ—Å—Ç—å—é! ‚≠ê',
        '–ë—Ä–∞–≤–æ! –¢—ã –Ω–∞ –≤–µ—Ä–Ω–æ–º –ø—É—Ç–∏! üéØ',
        '–°—É–ø–µ—Ä! –¢—ã —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è –ª—É—á—à–µ –≤—Å–µ—Ö! üèÜ',
        '–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ! –¢—ã –ø—Ä–æ—Å—Ç–æ –º–æ–ª–æ–¥–µ—Ü! ‚ù§Ô∏è',
        '–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ! –¢—ã —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è –Ω–∞ –æ—Ç–ª–∏—á–Ω–æ! üéâ',
        '–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –¢—ã –¥–µ–ª–∞–µ—à—å —ç—Ç–æ –±–ª–µ—Å—Ç—è—â–µ! ‚ú®',
        '–§–∞–Ω—Ç–∞—Å—Ç–∏—á–µ—Å–∫–∏! –¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –ø—Ä–æ—Ñ–∏! üöÄ',
        '–£–º–Ω–∏—Ü–∞! –¢—ã —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è –ø—Ä–æ—Å—Ç–æ –≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ! üí´'
    ];

    const motivationalPhrases = [
        '–ù–µ —Å–¥–∞–≤–∞–π—Å—è! –ö–∞–∂–¥–∞—è –ø–æ–ø—ã—Ç–∫–∞ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç –∫ –ø–æ–±–µ–¥–µ! üí™',
        '–ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! –¢—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–ø—Ä–∞–≤–∏—à—å—Å—è! üåü',
        '–û—à–∏–±–∫–∞ - —ç—Ç–æ –Ω–µ –∫–æ–Ω–µ—Ü, –∞ –ø–æ–¥—Å–∫–∞–∑–∫–∞ –∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –æ—Ç–≤–µ—Ç—É! üõ£Ô∏è',
        '–í–µ—Ä—å –≤ —Å–µ–±—è! –¢—ã —Å–ø–æ—Å–æ–±–µ–Ω –Ω–∞ –±–æ–ª—å—à–µ–µ! üí´',
        '–ö–∞–∂–¥–∞—è –ø–æ–ø—ã—Ç–∫–∞ - —ç—Ç–æ —à–∞–≥ –∫ —É—Å–ø–µ—Ö—É! üìà',
        '–ù–µ –±–æ–π—Å—è –æ—à–∏–±–∞—Ç—å—Å—è, –±–æ–π—Å—è –Ω–µ –ø—Ä–æ–±–æ–≤–∞—Ç—å! üéØ',
        '–¢—ã –±–ª–∏–∂–µ –∫ –ø–æ–±–µ–¥–µ, —á–µ–º –¥—É–º–∞–µ—à—å! ‚ù§Ô∏è',
        '–ö–∞–∂–¥–∞—è –ø–æ–ø—ã—Ç–∫–∞ –¥–µ–ª–∞–µ—Ç —Ç–µ–±—è —Å–∏–ª—å–Ω–µ–µ! üí™',
        '–ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è –Ω–∞ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–æ–º! üöÄ',
        '–¢—ã —Å–ø—Ä–∞–≤–∏—à—å—Å—è, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–π! ‚≠ê'
    ];

    const idioms = [
        '–ë–µ–∑ —Ç—Ä—É–¥–∞ –Ω–µ –≤—ã—Ç–∞—â–∏—à—å –∏ —Ä—ã–±–∫—É –∏–∑ –ø—Ä—É–¥–∞! üêü',
        '–¢–µ—Ä–ø–µ–Ω–∏–µ –∏ —Ç—Ä—É–¥ –≤—Å—ë –ø–µ—Ä–µ—Ç—Ä—É—Ç! ‚öíÔ∏è',
        '–£—á–µ–Ω—å–µ —Å–≤–µ—Ç, –∞ –Ω–µ—É—á–µ–Ω—å–µ —Ç—å–º–∞! üìö',
        '–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ - –º–∞—Ç—å —É—á–µ–Ω–∏—è! üîÑ',
        '–ì–ª–∞–∑–∞ –±–æ—è—Ç—Å—è, –∞ —Ä—É–∫–∏ –¥–µ–ª–∞—é—Ç! üëÄ',
        '–¢–∏—à–µ –µ–¥–µ—à—å - –¥–∞–ª—å—à–µ –±—É–¥–µ—à—å! üê¢',
        '–°–µ–º—å —Ä–∞–∑ –æ—Ç–º–µ—Ä—å, –æ–¥–∏–Ω —Ä–∞–∑ –æ—Ç—Ä–µ–∂—å! ‚úÇÔ∏è',
        '–ù–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–π –Ω–∞ –∑–∞–≤—Ç—Ä–∞ —Ç–æ, —á—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è! ‚è∞',
        '–í–µ–∫ –∂–∏–≤–∏ - –≤–µ–∫ —É—á–∏—Å—å! üéì',
        '–¢—è–∂–µ–ª–æ –≤ —É—á–µ–Ω–∏–∏ - –ª–µ–≥–∫–æ –≤ –±–æ—é! üõ°Ô∏è'
    ];
    
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = document.createElement('div');
    Object.assign(modal.style, modalStyles.modal);

    const gameContent = document.createElement('div');
    Object.assign(gameContent.style, modalStyles.content);

    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    const title = document.createElement('h2');
    Object.assign(title.style, modalStyles.title);
    title.textContent = '–ü–µ—Ä–µ–≤–µ—Ä–Ω–∏ —Ç–µ–∫—Å—Ç';

    const scoreDisplay = document.createElement('p');
    Object.assign(scoreDisplay.style, modalStyles.score);
    scoreDisplay.textContent = '–°—á—ë—Ç: 0/0';

    const questionDisplay = document.createElement('p');
    Object.assign(questionDisplay.style, modalStyles.question);
    questionDisplay.textContent = '';

    const input = document.createElement('input');
    input.type = 'text';
    input.placeholder = '–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç';
    Object.assign(input.style, modalStyles.input);

    const message = document.createElement('p');
    Object.assign(message.style, modalStyles.message);

    const button = document.createElement('button');
    button.textContent = '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å';
    Object.assign(button.style, modalStyles.button);

    const closeButton = document.createElement('button');
    closeButton.textContent = '–ó–∞–∫—Ä—ã—Ç—å';
    Object.assign(closeButton.style, modalStyles.button);

    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞
     * @returns {string} –ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–æ–µ —Å–ª–æ–≤–æ
     */
    function generateQuestion() {
        logger.info('Generating new text to reverse');
        
        try {
            const randomPhrase = phrases[Math.floor(Math.random() * phrases.length)];
            questionDisplay.textContent = randomPhrase;
            const reversed = randomPhrase.split('').reverse().join('');
            logger.info(`Generated phrase: "${randomPhrase}", reversed: "${reversed}"`);
            return reversed;
        } catch (error) {
            logger.error('Error generating question', error);
            throw error;
        }
    }

    let currentAnswer = generateQuestion();

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    function checkAnswer() {
        logger.info('Checking user answer');
        
        const userAnswer = input.value.trim();
        totalQuestions++;

        try {
            if (!userAnswer) {
                message.innerHTML = `
                    <div style="color: #202027;">
                        –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç
                    </div>
                `;
                message.style.background = '#f5f5f5';
                logger.warning('User entered empty input');
                return;
            }

            if (userAnswer.toLowerCase() === currentAnswer.toLowerCase()) {
                score++;
                const randomCompliment = compliments[Math.floor(Math.random() * compliments.length)];
                message.innerHTML = `
                    <div style="margin-bottom: 15px; color: #33d17a;">
                        –ü—Ä–∞–≤–∏–ª—å–Ω–æ! ${randomCompliment}
                    </div>
                    ${idioms[Math.floor(Math.random() * idioms.length)]}
                `;
                message.style.background = '#e8f5e9';
                logger.info('Correct answer', { userAnswer, correctAnswer: currentAnswer });
            } else {
                const randomMotivation = motivationalPhrases[Math.floor(Math.random() * motivationalPhrases.length)];
                message.innerHTML = `
                    <div style="margin-bottom: 15px; color: #202027;">
                        –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${currentAnswer}
                    </div>
                    <div style="font-style: italic; color: #666; border-left: 3px solid #202027; padding-left: 15px; margin-top: 10px;">
                        "${randomMotivation}"
                    </div>
                `;
                message.style.background = '#f5f5f5';
                logger.info('Incorrect answer', { userAnswer, correctAnswer: currentAnswer });
            }

            scoreDisplay.textContent = `–°—á—ë—Ç: ${score}/${totalQuestions}`;
            input.value = '';
            currentAnswer = generateQuestion();
        } catch (error) {
            logger.error('Error checking answer', error);
            message.innerHTML = `
                <div style="color: #ff4444;">
                    –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.
                </div>
            `;
            message.style.background = '#ffebee';
        }
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    button.addEventListener('click', checkAnswer);
    input.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') {
            checkAnswer();
        }
    });

    closeButton.addEventListener('click', () => {
        logger.info('Closing Reverse Text Game');
        document.body.removeChild(modal);
    });

    // –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    gameContent.appendChild(title);
    gameContent.appendChild(scoreDisplay);
    gameContent.appendChild(questionDisplay);
    gameContent.appendChild(input);
    gameContent.appendChild(message);
    gameContent.appendChild(button);
    gameContent.appendChild(closeButton);
    modal.appendChild(gameContent);
    document.body.appendChild(modal);

    input.focus();
    logger.info('Reverse Text Game initialized successfully');
}

window.startReverseTextGame = startReverseTextGame;
